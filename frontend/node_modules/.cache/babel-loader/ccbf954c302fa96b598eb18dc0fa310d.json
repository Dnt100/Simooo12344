{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\simoo\\\\Documents\\\\PROJECT_WEB_OCRES-master\\\\PROJECT_WEB_OCRES-1\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\simoo\\\\Documents\\\\PROJECT_WEB_OCRES-master\\\\PROJECT_WEB_OCRES-1\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Chart from 'react-apexcharts';\nimport { useSelector } from 'react-redux';\nimport StatusCard from '../components/status-card/StatusCard';\nimport Table from '../components/table/Table';\nimport Badge from '../components/badge/Badge';\nimport statusCards from '../assets/JsonData/status-card-data.json';\nconst chartOptions = {\n  series: [{\n    name: 'Online Customers',\n    data: [40, 70, 20, 90, 36, 80, 30, 91, 60]\n  }, {\n    name: 'Store Customers',\n    data: [40, 30, 70, 80, 40, 16, 40, 20, 51, 10]\n  }],\n  options: {\n    color: ['#6ab04c', '#2980b9'],\n    chart: {\n      background: 'transparent'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth'\n    },\n    xaxis: {\n      categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n    },\n    legend: {\n      position: 'top'\n    },\n    grid: {\n      show: false\n    }\n  }\n};\nconst topCustomers = {\n  head: ['user', 'total orders', 'total spending'],\n  body: [{\n    \"username\": \"john doe\",\n    \"order\": \"490\",\n    \"price\": \"$15,870\"\n  }, {\n    \"username\": \"frank iva\",\n    \"order\": \"250\",\n    \"price\": \"$12,251\"\n  }, {\n    \"username\": \"anthony baker\",\n    \"order\": \"120\",\n    \"price\": \"$10,840\"\n  }, {\n    \"username\": \"frank iva\",\n    \"order\": \"110\",\n    \"price\": \"$9,251\"\n  }, {\n    \"username\": \"anthony baker\",\n    \"order\": \"80\",\n    \"price\": \"$8,840\"\n  }]\n};\n\nconst renderCusomerHead = (item, index) => React.createElement(\"th\", {\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}, item);\n\nconst renderCusomerBody = (item, index) => React.createElement(\"tr\", {\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}, item.username), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}, item.order), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}, item.price));\n\nconst latestOrders = {\n  header: [\"order id\", \"user\", \"total price\", \"date\", \"status\"],\n  body: [{\n    id: \"#OD1711\",\n    user: \"john doe\",\n    date: \"17 Jun 2021\",\n    price: \"$900\",\n    status: \"shipping\"\n  }, {\n    id: \"#OD1712\",\n    user: \"frank iva\",\n    date: \"1 Jun 2021\",\n    price: \"$400\",\n    status: \"paid\"\n  }, {\n    id: \"#OD1713\",\n    user: \"anthony baker\",\n    date: \"27 Jun 2021\",\n    price: \"$200\",\n    status: \"pending\"\n  }, {\n    id: \"#OD1712\",\n    user: \"frank iva\",\n    date: \"1 Jun 2021\",\n    price: \"$400\",\n    status: \"paid\"\n  }, {\n    id: \"#OD1713\",\n    user: \"anthony baker\",\n    date: \"27 Jun 2021\",\n    price: \"$200\",\n    status: \"refund\"\n  }]\n};\nconst orderStatus = {\n  \"shipping\": \"primary\",\n  \"pending\": \"warning\",\n  \"paid\": \"success\",\n  \"refund\": \"danger\"\n};\n\nconst renderOrderHead = (item, index) => React.createElement(\"th\", {\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150\n  },\n  __self: this\n}, item);\n\nconst renderOrderBody = (item, index) => React.createElement(\"tr\", {\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 154\n  },\n  __self: this\n}, React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155\n  },\n  __self: this\n}, item.id), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 156\n  },\n  __self: this\n}, item.user), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 157\n  },\n  __self: this\n}, item.price), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158\n  },\n  __self: this\n}, item.date), React.createElement(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159\n  },\n  __self: this\n}, React.createElement(Badge, {\n  type: orderStatus[item.status],\n  content: item.status,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160\n  },\n  __self: this\n})));\n\nconst Dashboard = () => {\n  const themeReducer = useSelector(state => state.ThemeReducer.mode);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"page-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, statusCards.map((item, index) => React.createElement(\"div\", {\n    className: \"col-6\",\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(StatusCard, {\n    icon: item.icon,\n    count: item.count,\n    title: item.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"col-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card full-height\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(Chart, {\n    options: themeReducer === 'theme-mode-dark' ? _objectSpread({}, chartOptions.options, {\n      theme: {\n        mode: 'dark'\n      }\n    }) : _objectSpread({}, chartOptions.options, {\n      theme: {\n        mode: 'light'\n      }\n    }),\n    series: chartOptions.series,\n    type: \"line\",\n    height: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"col-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, \"top customers\")), React.createElement(\"div\", {\n    className: \"card__body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, React.createElement(Table, {\n    headData: topCustomers.head,\n    renderHead: (item, index) => renderCusomerHead(item, index),\n    bodyData: topCustomers.body,\n    renderBody: (item, index) => renderCusomerBody(item, index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"card__footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, \"view all\")))), React.createElement(\"div\", {\n    className: \"col-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card__header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, \"latest orders\")), React.createElement(\"div\", {\n    className: \"card__body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(Table, {\n    headData: latestOrders.header,\n    renderHead: (item, index) => renderOrderHead(item, index),\n    bodyData: latestOrders.body,\n    renderBody: (item, index) => renderOrderBody(item, index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"card__footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, \"view all\"))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/simoo/Documents/PROJECT_WEB_OCRES-master/PROJECT_WEB_OCRES-1/frontend/src/pages/Dashboard.jsx"],"names":["React","useEffect","Link","Chart","useSelector","StatusCard","Table","Badge","statusCards","chartOptions","series","name","data","options","color","chart","background","dataLabels","enabled","stroke","curve","xaxis","categories","legend","position","grid","show","topCustomers","head","body","renderCusomerHead","item","index","renderCusomerBody","username","order","price","latestOrders","header","id","user","date","status","orderStatus","renderOrderHead","renderOrderBody","Dashboard","themeReducer","state","ThemeReducer","mode","map","icon","count","title","theme"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport Chart from 'react-apexcharts'\n\nimport { useSelector } from 'react-redux'\n\nimport StatusCard from '../components/status-card/StatusCard'\n\nimport Table from '../components/table/Table'\n\nimport Badge from '../components/badge/Badge'\n\nimport statusCards from '../assets/JsonData/status-card-data.json'\n\nconst chartOptions = {\n    series: [{\n        name: 'Online Customers',\n        data: [40,70,20,90,36,80,30,91,60]\n    }, {\n        name: 'Store Customers',\n        data: [40, 30, 70, 80, 40, 16, 40, 20, 51, 10]\n    }],\n    options: {\n        color: ['#6ab04c', '#2980b9'],\n        chart: {\n            background: 'transparent'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth'\n        },\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n        },\n        legend: {\n            position: 'top'\n        },\n        grid: {\n            show: false\n        }\n    }\n}\n\nconst topCustomers = {\n    head: [\n        'user',\n        'total orders',\n        'total spending'\n    ],\n    body: [\n        {\n            \"username\": \"john doe\",\n            \"order\": \"490\",\n            \"price\": \"$15,870\"\n        },\n        {\n            \"username\": \"frank iva\",\n            \"order\": \"250\",\n            \"price\": \"$12,251\"\n        },\n        {\n            \"username\": \"anthony baker\",\n            \"order\": \"120\",\n            \"price\": \"$10,840\"\n        },\n        {\n            \"username\": \"frank iva\",\n            \"order\": \"110\",\n            \"price\": \"$9,251\"\n        },\n        {\n            \"username\": \"anthony baker\",\n            \"order\": \"80\",\n            \"price\": \"$8,840\"\n        }\n    ]\n}\n\nconst renderCusomerHead = (item, index) => (\n    <th key={index}>{item}</th>\n)\n\nconst renderCusomerBody = (item, index) => (\n    <tr key={index}>\n        <td>{item.username}</td>\n        <td>{item.order}</td>\n        <td>{item.price}</td>\n    </tr>\n)\n\nconst latestOrders = {\n    header: [\n        \"order id\",\n        \"user\",\n        \"total price\",\n        \"date\",\n        \"status\"\n    ],\n    body: [\n        {\n            id: \"#OD1711\",\n            user: \"john doe\",\n            date: \"17 Jun 2021\",\n            price: \"$900\",\n            status: \"shipping\"\n        },\n        {\n            id: \"#OD1712\",\n            user: \"frank iva\",\n            date: \"1 Jun 2021\",\n            price: \"$400\",\n            status: \"paid\"\n        },\n        {\n            id: \"#OD1713\",\n            user: \"anthony baker\",\n            date: \"27 Jun 2021\",\n            price: \"$200\",\n            status: \"pending\"\n        },\n        {\n            id: \"#OD1712\",\n            user: \"frank iva\",\n            date: \"1 Jun 2021\",\n            price: \"$400\",\n            status: \"paid\"\n        },\n        {\n            id: \"#OD1713\",\n            user: \"anthony baker\",\n            date: \"27 Jun 2021\",\n            price: \"$200\",\n            status: \"refund\"\n        }\n    ]\n}\n\nconst orderStatus = {\n    \"shipping\": \"primary\",\n    \"pending\": \"warning\",\n    \"paid\": \"success\",\n    \"refund\": \"danger\"\n}\n\nconst renderOrderHead = (item, index) => (\n    <th key={index}>{item}</th>\n)\n\nconst renderOrderBody = (item, index) => (\n    <tr key={index}>\n        <td>{item.id}</td>\n        <td>{item.user}</td>\n        <td>{item.price}</td>\n        <td>{item.date}</td>\n        <td>\n            <Badge type={orderStatus[item.status]} content={item.status}/>\n        </td>\n    </tr>\n)\n\nconst Dashboard = () => {\n\n    const themeReducer = useSelector(state => state.ThemeReducer.mode)\n\n    return (\n        <div>\n            <h2 className=\"page-header\">Dashboard</h2>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <div className=\"row\">\n                        {\n                            statusCards.map((item, index) => (\n                                <div className=\"col-6\" key={index}>\n                                    <StatusCard\n                                        icon={item.icon}\n                                        count={item.count}\n                                        title={item.title}\n                                    />\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n                <div className=\"col-6\">\n                    <div className=\"card full-height\">\n                        {/* chart */}\n                        <Chart\n                            options={themeReducer === 'theme-mode-dark' ? {\n                                ...chartOptions.options,\n                                theme: { mode: 'dark'}\n                            } : {\n                                ...chartOptions.options,\n                                theme: { mode: 'light'}\n                            }}\n                            series={chartOptions.series}\n                            type='line'\n                            height='100%'\n                        />\n                    </div>\n                </div>\n                <div className=\"col-4\">\n                    <div className=\"card\">\n                        <div className=\"card__header\">\n                            <h3>top customers</h3>\n                        </div>\n                        <div className=\"card__body\">\n                            <Table\n                                headData={topCustomers.head}\n                                renderHead={(item, index) => renderCusomerHead(item, index)}\n                                bodyData={topCustomers.body}\n                                renderBody={(item, index) => renderCusomerBody(item, index)}\n                            />\n                        </div>\n                        <div className=\"card__footer\">\n                            <Link to='/'>view all</Link>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-8\">\n                    <div className=\"card\">\n                        <div className=\"card__header\">\n                            <h3>latest orders</h3>\n                        </div>\n                        <div className=\"card__body\">\n                            <Table\n                                headData={latestOrders.header}\n                                renderHead={(item, index) => renderOrderHead(item, index)}\n                                bodyData={latestOrders.body}\n                                renderBody={(item, index) => renderOrderBody(item, index)}\n                            />\n                        </div>\n                        <div className=\"card__footer\">\n                            <Link to='/'>view all</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}