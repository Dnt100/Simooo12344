{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\simoo\\\\Documents\\\\PROJECT_WEB_OCRES-master\\\\PROJECT_WEB_OCRES-1\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst ThemeReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_MODE':\n      return _objectSpread({}, state, {\n        mode: action.payload\n      });\n\n    case 'SET_COLOR':\n      return _objectSpread({}, state, {\n        color: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default ThemeReducer;","map":{"version":3,"sources":["C:/Users/simoo/Documents/PROJECT_WEB_OCRES-master/PROJECT_WEB_OCRES-1/frontend/src/redux/reducers/ThemeReducer.js"],"names":["ThemeReducer","state","action","type","mode","payload","color"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACzC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AACI,+BACOF,KADP;AAEIG,QAAAA,IAAI,EAAEF,MAAM,CAACG;AAFjB;;AAIJ,SAAK,WAAL;AACI,+BACOJ,KADP;AAEIK,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAFlB;;AAIJ;AACI,aAAOJ,KAAP;AAZR;AAcH,CAfD;;AAiBA,eAAeD,YAAf","sourcesContent":["const ThemeReducer = (state = {}, action) => {\n    switch(action.type) {\n        case 'SET_MODE':\n            return {\n                ...state,\n                mode: action.payload\n            }\n        case 'SET_COLOR':\n            return {\n                ...state,\n                color: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default ThemeReducer"]},"metadata":{},"sourceType":"module"}