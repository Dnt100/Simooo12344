{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\simoo\\\\Documents\\\\PROJECT_WEB_OCRES-master\\\\PROJECT_WEB_OCRES-1\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\simoo\\\\Documents\\\\PROJECT_WEB_OCRES-master\\\\PROJECT_WEB_OCRES-1\\\\frontend\\\\src\\\\components\\\\thememenu\\\\ThemeMenu.jsx\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport './thememenu.css';\nimport { useDispatch } from 'react-redux';\nimport ThemeAction from '../../redux/actions/ThemeAction';\nconst mode_settings = [{\n  id: 'light',\n  name: 'Light',\n  background: 'light-background',\n  class: 'theme-mode-light'\n}, {\n  id: 'dark',\n  name: 'Dark',\n  background: 'dark-background',\n  class: 'theme-mode-dark'\n}];\nconst color_settings = [{\n  id: 'blue',\n  name: 'Blue',\n  background: 'blue-color',\n  class: 'theme-color-blue'\n}, {\n  id: 'red',\n  name: 'Red',\n  background: 'red-color',\n  class: 'theme-color-red'\n}, {\n  id: 'cyan',\n  name: 'Cyan',\n  background: 'cyan-color',\n  class: 'theme-color-cyan'\n}, {\n  id: 'green',\n  name: 'Green',\n  background: 'green-color',\n  class: 'theme-color-green'\n}, {\n  id: 'orange',\n  name: 'Orange',\n  background: 'orange-color',\n  class: 'theme-color-orange'\n}];\n\nconst clickOutsideRef = (content_ref, toggle_ref) => {\n  document.addEventListener('mousedown', e => {\n    // user click toggle\n    if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\n      content_ref.current.classList.toggle('active');\n    } else {\n      // user click outside toggle and content\n      if (content_ref.current && !content_ref.current.contains(e.target)) {\n        content_ref.current.classList.remove('active');\n      }\n    }\n  });\n};\n\nconst ThemeMenu = () => {\n  const menu_ref = useRef(null);\n  const menu_toggle_ref = useRef(null);\n  clickOutsideRef(menu_ref, menu_toggle_ref);\n\n  const setActiveMenu = () => menu_ref.current.classList.add('active');\n\n  const closeMenu = () => menu_ref.current.classList.remove('active');\n\n  const _useState = useState('light'),\n        _useState2 = _slicedToArray(_useState, 2),\n        currMode = _useState2[0],\n        setcurrMode = _useState2[1];\n\n  const _useState3 = useState('blue'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currColor = _useState4[0],\n        setcurrColor = _useState4[1];\n\n  const dispatch = useDispatch();\n\n  const setMode = mode => {\n    setcurrMode(mode.id);\n    localStorage.setItem('themeMode', mode.class);\n    dispatch(ThemeAction.setMode(mode.class));\n  };\n\n  const setColor = color => {\n    setcurrColor(color.id);\n    localStorage.setItem('colorMode', color.class);\n    dispatch(ThemeAction.setColor(color.class));\n  };\n\n  useEffect(() => {\n    const themeClass = mode_settings.find(e => e.class === localStorage.getItem('themeMode', 'theme-mode-light'));\n    const colorClass = color_settings.find(e => e.class === localStorage.getItem('colorMode', 'theme-mode-light'));\n    if (themeClass !== undefined) setcurrMode(themeClass.id);\n    if (colorClass !== undefined) setcurrColor(colorClass.id);\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    ref: menu_toggle_ref,\n    className: \"dropdown__toggle\",\n    onClick: () => setActiveMenu(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"bx bx-palette\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    ref: menu_ref,\n    className: \"theme-menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Theme settings\"), React.createElement(\"button\", {\n    className: \"theme-menu__close\",\n    onClick: () => closeMenu(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"bx bx-x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"theme-menu__select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Choose mode\"), React.createElement(\"ul\", {\n    className: \"mode-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, mode_settings.map((item, index) => React.createElement(\"li\", {\n    key: index,\n    onClick: () => setMode(item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mode-list__color \".concat(item.background, \" \").concat(item.id === currMode ? 'active' : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"bx bx-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, item.name))))), React.createElement(\"div\", {\n    className: \"theme-menu__select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Choose color\"), React.createElement(\"ul\", {\n    className: \"mode-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, color_settings.map((item, index) => React.createElement(\"li\", {\n    key: index,\n    onClick: () => setColor(item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mode-list__color \".concat(item.background, \" \").concat(item.id === currColor ? 'active' : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"bx bx-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, item.name)))))));\n};\n\nexport default ThemeMenu;","map":{"version":3,"sources":["C:/Users/simoo/Documents/PROJECT_WEB_OCRES-master/PROJECT_WEB_OCRES-1/frontend/src/components/thememenu/ThemeMenu.jsx"],"names":["React","useRef","useState","useEffect","useDispatch","ThemeAction","mode_settings","id","name","background","class","color_settings","clickOutsideRef","content_ref","toggle_ref","document","addEventListener","e","current","contains","target","classList","toggle","remove","ThemeMenu","menu_ref","menu_toggle_ref","setActiveMenu","add","closeMenu","currMode","setcurrMode","currColor","setcurrColor","dispatch","setMode","mode","localStorage","setItem","setColor","color","themeClass","find","getItem","colorClass","undefined","map","item","index"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect} from 'react'\n\nimport './thememenu.css'\n\nimport { useDispatch } from 'react-redux'\n\nimport ThemeAction from '../../redux/actions/ThemeAction'\n\nconst mode_settings = [\n    {\n        id: 'light',\n        name: 'Light',\n        background: 'light-background',\n        class: 'theme-mode-light'\n    },\n    {\n        id: 'dark',\n        name: 'Dark',\n        background: 'dark-background',\n        class: 'theme-mode-dark'\n    }\n]\n\nconst color_settings = [\n    {\n        id: 'blue',\n        name: 'Blue',\n        background: 'blue-color',\n        class: 'theme-color-blue'\n    },\n    {\n        id: 'red',\n        name: 'Red',\n        background: 'red-color',\n        class: 'theme-color-red'\n    },\n    {\n        id: 'cyan',\n        name: 'Cyan',\n        background: 'cyan-color',\n        class: 'theme-color-cyan'\n    },\n    {\n        id: 'green',\n        name: 'Green',\n        background: 'green-color',\n        class: 'theme-color-green'\n    },\n    {\n        id: 'orange',\n        name: 'Orange',\n        background: 'orange-color',\n        class: 'theme-color-orange'\n    },\n]\n\nconst clickOutsideRef = (content_ref, toggle_ref) => {\n    document.addEventListener('mousedown', (e) => {\n        // user click toggle\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\n            content_ref.current.classList.toggle('active')\n        } else {\n            // user click outside toggle and content\n            if (content_ref.current && !content_ref.current.contains(e.target)) {\n                content_ref.current.classList.remove('active')\n            }\n        }\n    })\n}\n\nconst ThemeMenu = () => {\n\n    const menu_ref = useRef(null)\n    const menu_toggle_ref = useRef(null)\n\n    clickOutsideRef(menu_ref, menu_toggle_ref)\n\n    const setActiveMenu = () => menu_ref.current.classList.add('active')\n\n    const closeMenu = () => menu_ref.current.classList.remove('active')\n\n    const [currMode, setcurrMode] = useState('light')\n\n    const [currColor, setcurrColor] = useState('blue')\n\n    const dispatch = useDispatch()\n\n    const setMode = mode => {\n        setcurrMode(mode.id)\n        localStorage.setItem('themeMode', mode.class)\n        dispatch(ThemeAction.setMode(mode.class))\n    }\n\n    const setColor = color => {\n        setcurrColor(color.id)\n        localStorage.setItem('colorMode', color.class)\n        dispatch(ThemeAction.setColor(color.class))\n    }\n\n    useEffect(() => {\n        const themeClass = mode_settings.find(e => e.class === localStorage.getItem('themeMode', 'theme-mode-light'))\n\n        const colorClass = color_settings.find(e => e.class === localStorage.getItem('colorMode', 'theme-mode-light'))\n\n        if (themeClass !== undefined) setcurrMode(themeClass.id)\n\n        if (colorClass !== undefined) setcurrColor(colorClass.id)\n\n    }, []);\n\n    return (\n        <div>\n            <button ref={menu_toggle_ref} className=\"dropdown__toggle\" onClick={() => setActiveMenu()}>\n                <i className='bx bx-palette'></i>\n            </button>\n            <div ref={menu_ref} className=\"theme-menu\">\n                <h4>Theme settings</h4>\n                <button className=\"theme-menu__close\" onClick={() => closeMenu()}>\n                    <i className='bx bx-x'></i>\n                </button>\n                <div className=\"theme-menu__select\">\n                    <span>Choose mode</span>\n                    <ul className=\"mode-list\">\n                        {\n                            mode_settings.map((item, index) => (\n                                <li key={index} onClick={() => setMode(item)}>\n                                    <div className={`mode-list__color ${item.background} ${item.id === currMode ? 'active' : ''}`}>\n                                        <i className='bx bx-check'></i>\n                                    </div>\n                                    <span>{item.name}</span>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n                <div className=\"theme-menu__select\">\n                    <span>Choose color</span>\n                    <ul className=\"mode-list\">\n                        {\n                            color_settings.map((item, index) => (\n                                <li key={index} onClick={() => setColor(item)}>\n                                    <div className={`mode-list__color ${item.background} ${item.id === currColor ? 'active' : ''}`}>\n                                        <i className='bx bx-check'></i>\n                                    </div>\n                                    <span>{item.name}</span>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ThemeMenu\n"]},"metadata":{},"sourceType":"module"}